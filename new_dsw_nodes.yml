---
- name: Initial setup VM
  hosts: localhost
  vars_files:
    - docker_swarm.yml
  tasks:
    - name: Clone VMs
      proxmox_kvm:
        node: "{{ node }}"
        name: "{{ item.value.name }}"
        newid: "{{ item.value.vmid }}"
        api_user: "{{ api_user }}"
        api_password: "{{ api_password }}"
        api_host: "{{ api_host }}"
        clone: "{{ clone_vm }}"
        full: true
        timeout: 500
      loop: "{{ lookup('dict', vms) }}"
      tags: [clone]
    - name: Update VMs set IP and sshkeys
      proxmox_kvm:
        api_host: "{{ api_host }}"
        api_user: "{{ api_user }}"
        api_password: "{{ api_password }}"
        cores: "{{ item.value.cores }}"
        sockets: "{{ item.value.sockets }}"
        memory: "{{ item.value.memory }}"
        update: true
        vmid: "{{ item.value.vmid }}"
        node: "{{ node }}"
        name: "{{ item.value.name }}"
        nameservers: "{{ dns }}"
        net:
          net0: "virtio,bridge=vmbr0"
        ipconfig:
          ipconfig0: "ip={{ item.value.ipaddress }},gw={{ gateway }}"
        sshkeys: "{{ key_name }}"
      loop: "{{ lookup('dict', vms) }}"
      tags: [update]
    - name: Start VMs
      proxmox_kvm:
        api_host: "{{ api_host }}"
        api_password: "{{ api_password }}"
        api_user: "{{ api_user }}"
        vmid: "{{ item.value.vmid }}"
        node: "{{ node }}"
        state: started
        timeout: 200
      loop: "{{ lookup('dict', vms) }}"
      tags: [start]
- name: Wait Start VM and add new ssh keys
  hosts: MasterSwarmNode, WorkerSwarmNodes
  gather_facts: false
  tasks:
    - name: Pause for 3 minutes to VM Start and updates
      pause:
        minutes: 3
    - name: Add new nodes to known_hosts
      set_fact:
        ansible_ssh_common_args: "-o StrictHostKeyChecking=accept-new"
- name: Install Docker on Nodes
  hosts: MasterSwarmNode, WorkerSwarmNodes
  become: true
  vars_files:
    - docker_swarm.yml
  tasks:
    - name: Install dependencies
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present
        update_cache: yes
    - name: Add GPG key
      apt_key:
        url: "{{ docker_gpg }}"
        state: present
    - name: Add docker repository to apt
      apt_repository:
        repo: "{{ docker_repo }}"
        state: present
    - name: Install docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose
        state: latest
        update_cache: yes
    - name: Check docker is active
      service:
        name: docker
        state: started
        enabled: yes
    - name: Ensure group docker exists
      group:
        name: docker
        state: present
    - name: Adding user adm1n to docker group
      user:
        name: adm1n
        groups: docker
        append: yes
- name: Init Swarm
  hosts: MasterSwarmNode
  become: true
  tasks:
    - name: Init Swarm
      docker_swarm:
        state: present
      register: out_data
    - name: Set swarm facts
      set_fact:
        cacheable: yes
        swarm_facts: "{{ out_data.swarm_facts }}"
- name: Workers Join Swarm
  hosts: WorkerSwarmNodes
  become: true
  vars: 
    worker_ip: "{{ ansible_facts.default_ipv4.address }}"
  tasks:
    - name: Workers join cluster
      docker_swarm:
        state: join
        advertise_addr: "{{ ansible_facts.default_ipv4.address }}"
        join_token: "{{ hostvars[groups['MasterSwarmNode'][0]].swarm_facts.JoinTokens.Worker }}"
        remote_addrs: "{{ hostvars[groups['MasterSwarmNode'][0]].ansible_facts.default_ipv4.address }}:2377"
